{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder\\\\TeamC\\\\TeamC\\\\src\\\\components\\\\TopPlacement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Placement from './Placement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TopPlacement() {\n  _s();\n\n  const slideCards = direction => {\n    var container = document.getElementById('cards');\n    let scrollCompleted = 0;\n    var slideVar = setInterval(() => {\n      if (direction === 'left') {\n        container.scrollLeft -= 30;\n      } else {\n        container.scrollLeft += 30;\n      }\n\n      scrollCompleted += 100;\n\n      if (scrollCompleted >= 1000) {\n        if (container.scrollLeft >= 3934) container.scrollLeft = 0;\n        console.log(container.scrollLeft, scrollCompleted);\n        window.clearInterval(slideVar);\n      }\n    }, 50);\n  };\n\n  useEffect(() => {\n    const timeinterval = setInterval(() => {\n      slideCards(\"right\");\n    }, 3000);\n    return () => clearInterval(timeinterval);\n  }, [slideCards]);\n  let navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full rounded-[9px] border border-[rgba(0,105,140,0.1] p-3 mx-3 my-[72px] pt-[54px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute -mt-[78px] p-2 px-4 bg-[rgba(0,105,140,1)] font-medium text-[#fff] shadow-lg rounded-[20px] text-2xl\",\n        children: \"Top Placements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 m-2 lg:mx-4 w-full items-center justify-center place-items-center text-gray-700 over\",\n        children: /*#__PURE__*/_jsxDEV(Placement, {\n          search: search,\n          cnt: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(TopPlacement, \"ozcc7agSozDt5Ds+4CzVCamyzlI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = TopPlacement;\nexport default TopPlacement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopPlacement\");","map":{"version":3,"names":["React","useEffect","useNavigate","Placement","TopPlacement","slideCards","direction","container","document","getElementById","scrollCompleted","slideVar","setInterval","scrollLeft","console","log","window","clearInterval","timeinterval","navigate","search"],"sources":["E:/New folder/TeamC/TeamC/src/components/TopPlacement.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Placement from './Placement'\r\nfunction TopPlacement() {\r\n    const slideCards=(direction)=> {\r\n        var container = document.getElementById('cards')\r\n        let scrollCompleted = 0\r\n        var slideVar = setInterval(() =>{\r\n          if (direction === 'left') {\r\n            container.scrollLeft -= 30\r\n          } else {\r\n            container.scrollLeft += 30\r\n          }\r\n          scrollCompleted += 100\r\n          if (scrollCompleted >= 1000) {\r\n            if(container.scrollLeft >=3934) container.scrollLeft = 0;\r\n            console.log(container.scrollLeft,scrollCompleted);\r\n            window.clearInterval(slideVar)\r\n          }\r\n        }, 50)\r\n      }\r\n    useEffect(() => {\r\n      const timeinterval = setInterval(()=>{\r\n        slideCards(\"right\");\r\n      },3000)\r\n    \r\n      return () => clearInterval(timeinterval);\r\n    }, [slideCards])\r\n    \r\n    let navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <div className='w-full rounded-[9px] border border-[rgba(0,105,140,0.1] p-3 mx-3 my-[72px] pt-[54px]'>\r\n                <div className='absolute -mt-[78px] p-2 px-4 bg-[rgba(0,105,140,1)] font-medium text-[#fff] shadow-lg rounded-[20px] text-2xl'>Top Placements</div>\r\n                <div className='grid grid-cols-1 lg:grid-cols-2 m-2 lg:mx-4 w-full items-center justify-center place-items-center text-gray-700 over'>\r\n                    <Placement search={search} cnt = {4}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopPlacement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AACA,SAASC,YAAT,GAAwB;EAAA;;EACpB,MAAMC,UAAU,GAAEC,SAAD,IAAc;IAC3B,IAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhB;IACA,IAAIC,eAAe,GAAG,CAAtB;IACA,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAK;MAC9B,IAAIN,SAAS,KAAK,MAAlB,EAA0B;QACxBC,SAAS,CAACM,UAAV,IAAwB,EAAxB;MACD,CAFD,MAEO;QACLN,SAAS,CAACM,UAAV,IAAwB,EAAxB;MACD;;MACDH,eAAe,IAAI,GAAnB;;MACA,IAAIA,eAAe,IAAI,IAAvB,EAA6B;QAC3B,IAAGH,SAAS,CAACM,UAAV,IAAuB,IAA1B,EAAgCN,SAAS,CAACM,UAAV,GAAuB,CAAvB;QAChCC,OAAO,CAACC,GAAR,CAAYR,SAAS,CAACM,UAAtB,EAAiCH,eAAjC;QACAM,MAAM,CAACC,aAAP,CAAqBN,QAArB;MACD;IACF,CAZyB,EAYvB,EAZuB,CAA1B;EAaD,CAhBH;;EAiBAV,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAGN,WAAW,CAAC,MAAI;MACnCP,UAAU,CAAC,OAAD,CAAV;IACD,CAF+B,EAE9B,IAF8B,CAAhC;IAIA,OAAO,MAAMY,aAAa,CAACC,YAAD,CAA1B;EACD,CANQ,EAMN,CAACb,UAAD,CANM,CAAT;EAQA,IAAIc,QAAQ,GAAGjB,WAAW,EAA1B;EACA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,sFAAf;MAAA,wBACI;QAAK,SAAS,EAAC,+GAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,sHAAf;QAAA,uBACI,QAAC,SAAD;UAAW,MAAM,EAAEkB,MAAnB;UAA2B,GAAG,EAAI;QAAlC;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAUH;;GArCQhB,Y;UA0BUF,W;;;KA1BVE,Y;AAuCT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}